<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>白开水船长</title>
  
  <subtitle>东隅已逝，桑榆非晚</subtitle>
  <link href="https://cq230.github.io/atom.xml" rel="self"/>
  
  <link href="https://cq230.github.io/"/>
  <updated>2024-12-18T15:52:19.589Z</updated>
  <id>https://cq230.github.io/</id>
  
  <author>
    <name>Ryan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test11</title>
    <link href="https://cq230.github.io/posts/cd52de3f.html"/>
    <id>https://cq230.github.io/posts/cd52de3f.html</id>
    <published>2024-12-18T15:49:42.000Z</published>
    <updated>2024-12-18T15:52:19.589Z</updated>
    
    <content type="html"><![CDATA[<p>grgfgthjj</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;grgfgthjj&lt;/p&gt;
</summary>
      
    
    
    
    <category term="学习笔记test" scheme="https://cq230.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0test/"/>
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>test12</title>
    <link href="https://cq230.github.io/posts/545b8f85.html"/>
    <id>https://cq230.github.io/posts/545b8f85.html</id>
    <published>2024-12-18T15:49:42.000Z</published>
    <updated>2024-12-20T09:58:19.175Z</updated>
    
    <content type="html"><![CDATA[<p>dsafdfe</p><h3 id="rterwt"><a href="#rterwt" class="headerlink" title="rterwt"></a>rterwt</h3><p>hehewqr</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;dsafdfe&lt;/p&gt;
&lt;h3 id=&quot;rterwt&quot;&gt;&lt;a href=&quot;#rterwt&quot; class=&quot;headerlink&quot; title=&quot;rterwt&quot;&gt;&lt;/a&gt;rterwt&lt;/h3&gt;&lt;p&gt;hehewqr&lt;/p&gt;
</summary>
      
    
    
    
    <category term="学习笔记test" scheme="https://cq230.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0test/"/>
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>test10</title>
    <link href="https://cq230.github.io/posts/ba55eea9.html"/>
    <id>https://cq230.github.io/posts/ba55eea9.html</id>
    <published>2024-12-18T12:21:06.000Z</published>
    <updated>2024-12-18T12:35:48.320Z</updated>
    
    <content type="html"><![CDATA[<p>dd<br>ddaflg[gkogdsogjsgjwp]</p><h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;dd&lt;br&gt;ddaflg[gkogdsogjsgjwp]&lt;/p&gt;
&lt;h1 id=&quot;test&quot;&gt;&lt;a href=&quot;#test&quot; class=&quot;headerlink&quot; title=&quot;test&quot;&gt;&lt;/a&gt;test&lt;/h1&gt;</summary>
      
    
    
    
    <category term="学习笔记test" scheme="https://cq230.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0test/"/>
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
    <category term="new tag" scheme="https://cq230.github.io/tags/new-tag/"/>
    
  </entry>
  
  <entry>
    <title>test06</title>
    <link href="https://cq230.github.io/posts/4a2d7add.html"/>
    <id>https://cq230.github.io/posts/4a2d7add.html</id>
    <published>2024-12-17T07:17:57.000Z</published>
    <updated>2024-12-20T08:43:34.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试06"><a href="#测试06" class="headerlink" title="测试06"></a>测试06</h1><p>f’d’w’f’gear’gfdwfgearggreg<br><strong>testtesttesttesttesttest</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;testtesttesttesttesttest&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;测试06&quot;&gt;&lt;a href=&quot;#测试06&quot; class=&quot;headerlink&quot; title=&quot;测试06&quot;&gt;&lt;/a&gt;测试06&lt;/h1&gt;&lt;p&gt;f’d’w’f’gear’gfdwfgearggreg&lt;br&gt;&lt;strong&gt;testtesttesttesttesttes</summary>
      
    
    
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
    <category term="new tag" scheme="https://cq230.github.io/tags/new-tag/"/>
    
  </entry>
  
  <entry>
    <title>test05</title>
    <link href="https://cq230.github.io/posts/d3242b67.html"/>
    <id>https://cq230.github.io/posts/d3242b67.html</id>
    <published>2024-12-17T07:17:53.000Z</published>
    <updated>2024-12-17T07:19:55.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试053425"><a href="#测试053425" class="headerlink" title="测试053425"></a>测试053425</h1><p>f’d’w’f’gear’gfdwfgearggreg<br><strong>testtesttesttesttesttest</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&#x27;testtesttesttesttesttest&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;测试053425&quot;&gt;&lt;a href=&quot;#测试053425&quot; class=&quot;headerlink&quot; title=&quot;测试053425&quot;&gt;&lt;/a&gt;测试053425&lt;/h1&gt;&lt;p&gt;f’d’w’f’gear’gfdwfgearggreg&lt;br&gt;&lt;strong&gt;testtes</summary>
      
    
    
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
    <category term="心情，技术" scheme="https://cq230.github.io/tags/%E5%BF%83%E6%83%85%EF%BC%8C%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>test03</title>
    <link href="https://cq230.github.io/posts/3a478e52.html"/>
    <id>https://cq230.github.io/posts/3a478e52.html</id>
    <published>2024-12-17T07:17:45.000Z</published>
    <updated>2024-12-17T07:19:55.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试0152352"><a href="#测试0152352" class="headerlink" title="测试0152352"></a>测试0152352</h1><p>f’d’w’f’gear’gfdwfgearggreg<br><strong>testtesttesttesttesttest</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&#x27;testtesttesttesttesttest&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;测试0152352&quot;&gt;&lt;a href=&quot;#测试0152352&quot; class=&quot;headerlink&quot; title=&quot;测试0152352&quot;&gt;&lt;/a&gt;测试0152352&lt;/h1&gt;&lt;p&gt;f’d’w’f’gear’gfdwfgearggreg&lt;br&gt;&lt;strong&gt;tes</summary>
      
    
    
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
    <category term="心情，技术" scheme="https://cq230.github.io/tags/%E5%BF%83%E6%83%85%EF%BC%8C%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>test02</title>
    <link href="https://cq230.github.io/posts/4d40bec4.html"/>
    <id>https://cq230.github.io/posts/4d40bec4.html</id>
    <published>2024-12-17T07:17:42.000Z</published>
    <updated>2024-12-17T07:19:55.941Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试01431241"><a href="#测试01431241" class="headerlink" title="测试01431241"></a>测试01431241</h1><p>f’d’w’f’gear’gfdwfgearggreg<br><strong>testtesttesttesttesttest</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&#x27;testtesttesttesttesttest&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;测试01431241&quot;&gt;&lt;a href=&quot;#测试01431241&quot; class=&quot;headerlink&quot; title=&quot;测试01431241&quot;&gt;&lt;/a&gt;测试01431241&lt;/h1&gt;&lt;p&gt;f’d’w’f’gear’gfdwfgearggreg&lt;br&gt;&lt;strong</summary>
      
    
    
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
    <category term="心情，技术" scheme="https://cq230.github.io/tags/%E5%BF%83%E6%83%85%EF%BC%8C%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>test01</title>
    <link href="https://cq230.github.io/posts/d449ef7e.html"/>
    <id>https://cq230.github.io/posts/d449ef7e.html</id>
    <published>2024-12-17T07:09:51.000Z</published>
    <updated>2024-12-17T11:54:36.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试01"><a href="#测试01" class="headerlink" title="测试01"></a>测试01</h1><p>f’d’w’f’gear’gfdwfgearggreg<br><strong>testtesttesttesttesttest</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&#x27;testtesttesttesttesttest&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;测试01&quot;&gt;&lt;a href=&quot;#测试01&quot; class=&quot;headerlink&quot; title=&quot;测试01&quot;&gt;&lt;/a&gt;测试01&lt;/h1&gt;&lt;p&gt;f’d’w’f’gear’gfdwfgearggreg&lt;br&gt;&lt;strong&gt;testtesttesttesttesttes</summary>
      
    
    
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
    <category term="心情，技术" scheme="https://cq230.github.io/tags/%E5%BF%83%E6%83%85%EF%BC%8C%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cq230.github.io/posts/4a17b156.html"/>
    <id>https://cq230.github.io/posts/4a17b156.html</id>
    <published>2024-06-26T09:00:00.000Z</published>
    <updated>2024-12-17T11:51:40.989Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p><img src="https://cloudflare-imgbed-ebz.pages.dev/file/1731757669045_IMG_0545.jpeg" alt="test img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p><img src="https://cloudflare-imgbed-ebz.pages.dev/file/1733737357008_bingimg_20241209_UHD.jpg" alt="test img"></p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="学习笔记test" scheme="https://cq230.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0test/"/>
    
    
    <category term="test" scheme="https://cq230.github.io/tags/test/"/>
    
    <category term="node.js" scheme="https://cq230.github.io/tags/node-js/"/>
    
    <category term="hexo" scheme="https://cq230.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>interface.md</title>
    <link href="https://cq230.github.io/posts/9a542ee1.html"/>
    <id>https://cq230.github.io/posts/9a542ee1.html</id>
    <published>2021-12-30T09:16:24.000Z</published>
    <updated>2024-12-20T09:56:56.253Z</updated>
    
    <content type="html"><![CDATA[<h1 id="interface"><a href="#interface" class="headerlink" title="interface"></a>interface</h1><ol><li><p>定义接口：定义接口中的成员</p><p><del>JDK7及以前：接口中只能定义全局常量和抽象方法：</del></p><p><del><strong>全局常量</strong>：public static final 的，但是在接口中书写时，可以省略不写；</del></p><p><del><strong>抽象方法</strong>：public abstract 的。</del></p><p>JDK8：除了全局常量和抽象方法，还可以定义静态方法、默认方法，二者可以<strong>有方法体</strong>：</p><ul><li><p><strong>静态方法：</strong>只能通过接口来调用；</p></li><li><p><strong>默认方法：</strong></p><ol><li><p>通过<strong>实现类的对象</strong>，可以调用接口中的<strong>默认方法</strong>；如果实现类重写了接口中的默认方法，调用时仍然调用的是重写后的方法；</p></li><li><p>如果实现类实现了多个接口，而这多个接口中定义了同名同参数的默认方法，那么实现类在没有重写此方法的情况下会报错。——&gt; <strong>接口冲突</strong>。这就需要我们在实现类中重写此方法；</p></li><li><p>如果子类（或实现类）继承的父类和实现的接口中声明了同名同参数的默认方法，那么子类在没有重写此方法的情况下，默认调用的是父类中的同名同参数方法。——&gt;<strong>类优先原则</strong></p><p>注意：类优先原则<strong>仅针对方法</strong>，不包括属性，见下方面试题1</p></li><li><p><strong>规定</strong>：在子类（或实现类）的方法中可以调用父类、接口中<strong>被子类重写</strong>的方法，语法如下（见代码演示1）：</p><p>​super.testFunc();            &#x2F;&#x2F;调用父类中声明的方法</p><p>​接口.super.testFunc();   &#x2F;&#x2F; 调用接口中声明的默认方法</p></li></ol><ul><li><a href="https://www.bilibili.com/video/BV1Kb411W75N?p=359&share_source=copy_web">静态方法及默认方法讲解视频</a></li></ul></li></ul></li><li><p>接口中<strong>不能定义构造器</strong>，意味着接口不能被实例化；</p></li><li><p>Java开发中，接口通过让类去实现(implements)的方式来使用；</p></li><li><p>如果一个实现类中覆盖了接口中的<strong>所有</strong>抽象方法，则此实现类<strong>可以</strong>被实例化；</p><p>如果实现类没有覆盖接口中的所有抽象方法，则此实现类<strong>仍为一个抽象类</strong>。</p></li><li><p>Java<strong>类可以实现多个接口</strong> —&gt; 弥补了Java单继承的局限性；</p><p>格式：class AA extends BB implements CC,DD,EE</p></li><li><p>接口与接口之间可以继承，而且可以<strong>多继承</strong>；</p></li><li><p><a href="https://www.bilibili.com/video/BV1Kb411W75N?p=354&share_source=copy_web">接口的四种实现方式：</a>（匿名类与匿名对象）</p></li></ol><h4 id="接口面试题："><a href="#接口面试题：" class="headerlink" title="接口面试题："></a>接口面试题：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">extends</span> <span class="title class_">B</span> <span class="keyword">implements</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getX</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        System.out.println(x); //编译不通过，对 &#x27;x&#x27; 的引用不明确，&#x27;B.x&#x27; 和 &#x27;A.x&#x27; 均匹配</span></span><br><span class="line"></span><br><span class="line">        System.out.println(A.x); <span class="comment">// 0</span></span><br><span class="line">        System.out.println(<span class="built_in">super</span>.x); <span class="comment">// 1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">C</span>().getX();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码演示："><a href="#代码演示：" class="headerlink" title="代码演示："></a>代码演示：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span> <span class="keyword">implements</span> <span class="title class_">C</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>().myMethod();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFunc</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A&quot;</span>); <span class="comment">// A 重写了此方法</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myMethod</span><span class="params">()</span>&#123;</span><br><span class="line">        testFunc();         <span class="comment">// A (调用的是自己重写后的方法)</span></span><br><span class="line">        <span class="built_in">super</span>.testFunc();   <span class="comment">// B (调用的是父类中被重写的方法)</span></span><br><span class="line">        C.<span class="built_in">super</span>.testFunc(); <span class="comment">// C (调用的是接口中被重写的方法)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFunc</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">C</span> &#123;</span><br><span class="line">     <span class="keyword">default</span> <span class="keyword">void</span> <span class="title function_">testFunc</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;interface&quot;&gt;&lt;a href=&quot;#interface&quot; class=&quot;headerlink&quot; title=&quot;interface&quot;&gt;&lt;/a&gt;interface&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;定义接口：定义接口中的成员&lt;/p&gt;
&lt;p&gt;&lt;del&gt;JDK7及以前</summary>
      
    
    
    
    <category term="编程学习" scheme="https://cq230.github.io/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Java" scheme="https://cq230.github.io/tags/Java/"/>
    
    <category term="Java 关键字" scheme="https://cq230.github.io/tags/Java-%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    
    <category term="Java 基础" scheme="https://cq230.github.io/tags/Java-%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
